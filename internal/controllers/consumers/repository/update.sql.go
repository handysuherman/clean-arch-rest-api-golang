// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: update.sql

package repository

import (
	"context"
	"database/sql"

	"github.com/shopspring/decimal"
)

const update = `-- name: Update :exec
UPDATE consumers
SET
    full_name = COALESCE(?, full_name),
    birth_place = COALESCE(?, birth_place),
    birth_date = COALESCE(?, birth_date),
    salary = COALESCE(?, salary),
    ktp_photo = COALESCE(?, ktp_photo),
    selfie_photo = COALESCE(?, selfie_photo),
    updated_at = COALESCE(?, updated_at),
    updated_by = COALESCE(?, updated_by),
    is_activated = COALESCE(?, is_activated),
    is_activated_at = COALESCE(?, is_activated_at),
    is_activated_updated_at = COALESCE(?, is_activated_updated_at)
WHERE
    id = ?
`

type UpdateParams struct {
	FullName             sql.NullString      `json:"full_name"`
	BirthPlace           sql.NullString      `json:"birth_place"`
	BirthDate            sql.NullTime        `json:"birth_date"`
	Salary               decimal.NullDecimal `json:"salary"`
	KtpPhoto             sql.NullString      `json:"ktp_photo"`
	SelfiePhoto          sql.NullString      `json:"selfie_photo"`
	UpdatedAt            sql.NullString      `json:"updated_at"`
	UpdatedBy            sql.NullString      `json:"updated_by"`
	IsActivated          sql.NullBool        `json:"is_activated"`
	IsActivatedAt        sql.NullString      `json:"is_activated_at"`
	IsActivatedUpdatedAt sql.NullString      `json:"is_activated_updated_at"`
	ID                   int64               `json:"id"`
}

func (q *Queries) Update(ctx context.Context, arg *UpdateParams) error {
	_, err := q.db.ExecContext(ctx, update,
		arg.FullName,
		arg.BirthPlace,
		arg.BirthDate,
		arg.Salary,
		arg.KtpPhoto,
		arg.SelfiePhoto,
		arg.UpdatedAt,
		arg.UpdatedBy,
		arg.IsActivated,
		arg.IsActivatedAt,
		arg.IsActivatedUpdatedAt,
		arg.ID,
	)
	return err
}
