// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: update.sql

package repository

import (
	"context"
	"database/sql"
)

const update = `-- name: Update :exec
UPDATE affiliated_dealers
SET
    affiliated_dealer_name = COALESCE(?, affiliated_dealer_name),
    updated_at = COALESCE(?, updated_at),
    updated_by = COALESCE(?, updated_by),
    is_activated = COALESCE(?, is_activated),
    is_activated_at = COALESCE(?, is_activated_at),
    is_activated_updated_at = COALESCE(?, is_activated_updated_at)
WHERE
    id = ?
`

type UpdateParams struct {
	AffiliatedDealerName sql.NullString `json:"affiliated_dealer_name"`
	UpdatedAt            sql.NullString `json:"updated_at"`
	UpdatedBy            sql.NullString `json:"updated_by"`
	IsActivated          sql.NullBool   `json:"is_activated"`
	IsActivatedAt        sql.NullString `json:"is_activated_at"`
	IsActivatedUpdatedAt sql.NullString `json:"is_activated_updated_at"`
	ID                   int64          `json:"id"`
}

func (q *Queries) Update(ctx context.Context, arg *UpdateParams) error {
	_, err := q.db.ExecContext(ctx, update,
		arg.AffiliatedDealerName,
		arg.UpdatedAt,
		arg.UpdatedBy,
		arg.IsActivated,
		arg.IsActivatedAt,
		arg.IsActivatedUpdatedAt,
		arg.ID,
	)
	return err
}
